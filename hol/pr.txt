Функция add()
Если в словаре уже есть ключ, совпадающий с названием добавляемого продукта — новая партия продукта должна быть добавлена в список, хранящийся под этим ключом.
Если такого продукта в словаре нет — в словарь надо добавить новый элемент.

goods = {
    'Пельмени': [
        {'amount': 1, 'expiration_date': datetime.date(2023, 9, 30)}
    ]
}

# Добавляем покупку в словарь goods:
add(goods, 'Пельмени', 2, '2023-10-28')

# Словарь goods должен стать таким:

# goods = {
#     'Пельмени': [
#         {'amount': 1, 'expiration_date': datetime.date(2023, 9, 30)}
#         {'amount': 2, 'expiration_date': datetime.date(2023, 10, 28)}
#     ]
# } 
Параметры функции add()
У функции add() должно быть четыре параметра:
 - items — словарь, который хранит список продуктов (goods).
 - title — название добавляемого продукта, строка. Может содержать пробелы.
 - amount — количество добавляемого продукта.
 - expiration_date — срок годности добавляемого продукта, строка в формате %Y-%m-%d, например '2023-9-30'. Это необязательный параметр.

goods = {}

def add(items, title, amount, expiration_date=None):
    pass  # Код, который добавляет продукты в словарь goods.

# Добавляем продукт с названием 'Яйца', количество - 10 шт.
add(goods, 'Яйца', 10, '2023-9-30')


Результат
{
     'Яйца': [
         {'amount': 10, 'expiration_date': datetime.date(2023, 9, 30)}
     ]
 }




Добавление продукта из текстовой заметки: функция add_line()
Эта функция предназначена для того, чтобы упростить добавление продуктов в словарь goods. В функцию add_line() передаётся строка с описанием продукта; функция должна преобразовать строку в структурированные данные и добавить новый продукт в словарь.
Строка содержит:
 - Название продукта. Может содержать пробелы.
 - Количество продукта.
 - Срок годности в формате %Y-%m-%d.

items — словарь, который хранит список продуктов (goods).
note — строка с информацией о продукте.

def add_line(items, note):
    pass  

add_by_note(goods, 'Сосиски говяжие 4 2023-07-15')

ДОЛЖНО ПОЛУЧИТСЯ
# goods = {
#     'Сосиски говяжие': [
#         {'amount': 4, 'expiration_date': datetime.date(2023, 7, 15)}
#     ]
# } 




Поиск по названию продукта
Функция search() ищет продукты по ключевому слову.
def search(items, needle):
    pass

print(search(goods, 'п'))
Вывод ['Пудинг', 'Паштет', 'Пельмени']

items — словарь, который хранит список продуктов (goods).
needle — строка, по которой осуществляется поиск. Поиск должен быть нечувствителен к регистру.



Узнать количество продукта
Функция amount() предназначена для определения количества продукта с заданным названием. Эта функция должна вернуть число: общее количество продуктов, названия которых частично или полностью совпадают со строкой, переданной в параметры.
goods = {
    'Яйца': [{'amount': Decimal('1'), 'expiration_date': None}],
    'Морковь': [
        {'amount': 2, 'expiration_date': datetime.date(2023, 8, 1)},
        {'amount': 3, 'expiration_date': datetime.date(2023, 8, 6)}
    ],
    'Вода': [{'amount': 2, 'expiration_date': None}]
}

def amount(items, needle):
    pass

print(amount(goods, 'яйца'))
# Вывод: 1
print(amount(goods, 'морковь'))
# Вывод: 5 






Параметры функции expire()
У функции expire() должно быть два параметра:
expire(items, in_advance_days=0) 
items — словарь, который хранит список продуктов (goods).
in_advance_days — число дней, оставшееся до истечения срока годности продукта. Например, если указать in_advance_days = 2, то функция должна вернуть все продукты, срок хранения которых уже истёк и истекает завтра (первый день) или послезавтра (второй день).

По умолчанию in_advance_days должно быть равно 0 (сегодняшний день). В этом случае функция должна вернуть продукты, срок хранения которых истёк на момент вызова.
Возвращаемое значение
Функция должна вернуть список кортежей, где первый элемент — название продукта, а второй — общее количество просроченного продукта или продукта, срок хранения которого скоро истечёт.
Пример объявления и использования

goods = {
    'Хлеб': [
        {'amount': 1, 'expiration_date': None},
        {'amount': 1, 'expiration_date': dt.date(2023, 12, 9)}
    ],
    'Яйца': [
        {'amount': 2, 'expiration_date': dt.date(2023, 12, 12)},
        {'amount': 3, 'expiration_date': dt.date(2023, 12, 11)}
    ],
    'Вода': [{'amount': 10, 'expiration_date': None}]
}


def expire(items, in_advance_days=0):
    pass


# Вызов функции 10 декабря 2023 года
print(expire(goods))
# Вывод: [('Хлеб', 1)]

print(expire(goods, 1))
# Вывод: [('Хлеб', 1), ('Яйца', 3)]

print(expire(goods, 2))
# Вывод: [('Хлеб', 1), ('Яйца', 5)] 